<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://clearcode1124.github.io</id>
    <title>Gridea</title>
    <updated>2019-10-12T10:15:33.061Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://clearcode1124.github.io"/>
    <link rel="self" href="https://clearcode1124.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://clearcode1124.github.io/images/avatar.png</logo>
    <icon>https://clearcode1124.github.io/favicon.ico</icon>
    <rights>All rights reserved 2019, Gridea</rights>
    <entry>
        <title type="html"><![CDATA[RabbitMQ]]></title>
        <id>https://clearcode1124.github.io/post/rabbitmq</id>
        <link href="https://clearcode1124.github.io/post/rabbitmq">
        </link>
        <updated>2019-10-12T09:54:03.000Z</updated>
        <content type="html"><![CDATA[<h3 id="简介天天向上卡索">简介（<a href="https://www.jianshu.com/p/542e371c7f77">天天向上卡索</a>）</h3>
<blockquote>
<p>RabbitMQ——Rabbit Message Queue的简写，但不能仅仅理解其为消息队列，消息代理更合适。RabbitMQ 是一个由 Erlang 语言开发的AMQP（高级消息队列协议）的开源实现。<br>
RabbitMQ作为一个消息代理，主要和消息打交道，负责接收并转发消息。<br>
RabbitMQ提供了可靠的消息机制、跟踪机制和灵活的消息路由，支持消息集群和分布式部署。适用于排队算法、秒杀活动、消息分发、异步处理、数据同步、处理耗时任务、CQRS等应用场景</p>
</blockquote>
<h3 id="docker部署">docker部署</h3>
<ul>
<li><a href="https://hub.docker.com/_/rabbitmq">Docker Hub地址</a><pre><code class="language-bash"># --hostname my-rabbit 指定主机名
# -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password 设置默认的用户名/密码
docker run -tid --hostname my-rabbit --name some-rabbit -e RABBITMQ_DEFAULT_USER=user -e RABBITMQ_DEFAULT_PASS=password rabbitmq
</code></pre>
</li>
</ul>
<h3 id="docker部署集群">docker部署集群</h3>
<ul>
<li>
<p>参考自<a href="http://www.ywnds.com/?p=7674">彭东稳的博客</a></p>
</li>
<li>
<p>单机版</p>
<ul>
<li>采用<a href="https://github.com/bijukunjummen">bijukunjummen</a>提供的镜像</li>
</ul>
<pre><code class="language-bash">
git clone https://github.com/bijukunjummen/docker-rabbitmq-cluster.git

cd docker-rabbitmq-cluster/cluster  

docker-compose up -d # 如果docker daemon和docker-compose没有安装，要先安装

Pulling rabbit1 (bijukunjummen/rabbitmq-server:latest)...
latest: Pulling from bijukunjummen/rabbitmq-server
8d30e94188e7: Pull complete
.
.
.
Digest: 
sha256:a6bbb268de87d09d538152450b77835a27693039ab079785a7b72f595bef18a6
Status: Downloaded newer image for bijukunjummen/rabbitmq-server:latest
Creating cluster_rabbit1_1
Creating cluster_rabbit2_1
Creating cluster_rabbit3_1
</code></pre>
<ul>
<li>查看容器，默认启动了3个节点</li>
</ul>
<pre><code class="language-bash">docker ps  
CONTAINER ID        IMAGE                           COMMAND                  
CREATED             STATUS              PORTS                                                                                  
NAMES
ba5f665bb213        bijukunjummen/rabbitmq-server   &quot;/bin/sh -c /opt/rabb&quot;   
10 minutes ago      Up 10 minutes       4369/tcp, 9100-9105/tcp, 15672/tcp, 
25672/tcp, 0.0.0.0:5674-&gt;5672/tcp                  cluster_rabbit3_1
b9466e206b2b        bijukunjummen/rabbitmq-server   &quot;/bin/sh -c /opt/rabb&quot;   
10 minutes ago      Up 10 minutes       4369/tcp, 9100-9105/tcp, 25672/tcp, 
0.0.0.0:5673-&gt;5672/tcp, 0.0.0.0:15673-&gt;15672/tcp   cluster_rabbit2_1
b733201aeadf        bijukunjummen/rabbitmq-server   &quot;/bin/sh -c /opt/rabb&quot;   
10 minutes ago 

</code></pre>
</li>
<li>
<p>访问 http://ip:15672，输入guest/guest，进入rabbitmq界面<br>
<img src="http://images.clearcode.top/4a15fb6efb38b76b1c6e4351332fd23.png" alt="4a15fb6efb38b76b1c6e4351332fd23.png"></p>
</li>
</ul>
<h3 id="多机版">多机版</h3>
<h4 id="假设有三台服务器ip分别为101061367101061368101061369">假设有三台服务器，IP分别为10.106.136.7，10.106.136.8，10.106.136.9</h4>
<h4 id="三台服务器上docker-compose配置文件分别为">三台服务器上docker-compose配置文件分别为</h4>
<ul>
<li>rabbit1（10.106.136.7）</li>
</ul>
<pre><code class="language-bash">rabbit1:
  image: bijukunjummen/rabbitmq-server
  hostname: rabbit1
  ports:
    - &quot;5672:5672&quot;
    - &quot;4369:4369&quot;
    - &quot;1883:1883&quot;
    - &quot;15672:15672&quot;
    - &quot;25672:25672&quot;
  environment:
    - RABBITMQ_DEFAULT_USER=myuser
    - RABBITMQ_DEFAULT_PASS=mypass
</code></pre>
<ul>
<li>rabbit2（10.106.136.8）</li>
</ul>
<pre><code class="language-bash">rabbit2:
  image: bijukunjummen/rabbitmq-server
  hostname: rabbit2
  extra_hosts:
    - &quot;rabbit1:10.106.136.7&quot; 
  environment: 
   - CLUSTERED=true
   - CLUSTER_WITH=rabbit1
   - RAM_NODE=true
  ports:
      - &quot;5672:5672&quot;
      - &quot;4369:4369&quot;
      - &quot;1883:1883&quot;
      - &quot;15672:15672&quot;
      - &quot;25672:25672&quot;
</code></pre>
<ul>
<li>rabbit3（10.106.136.9）</li>
</ul>
<pre><code class="language-bash">rabbit3:
  image: bijukunjummen/rabbitmq-server
  hostname: rabbit3
  extra_hosts:
    - &quot;rabbit1:10.106.136.7&quot;
    - &quot;rabbit2:10.106.136.8&quot;
  environment: 
   - CLUSTERED=true
   - CLUSTER_WITH=rabbit1
   - RAM_NODE=true
  ports:
        - &quot;5672:5672&quot;
        - &quot;4369:4369&quot;
        - &quot;1883:1883&quot;
        - &quot;15672:15672&quot;
        - &quot;25672:25672&quot;
</code></pre>
<ul>
<li>依序在三个节点上分别开启rabbitmq，然后随意找个节点打开IP:15672，输入guest用户名和guest密码就可以查看集群了</li>
</ul>
]]></content>
    </entry>
</feed>